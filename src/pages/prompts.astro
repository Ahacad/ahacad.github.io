---
// src/pages/prompts.astro
import { getCollection } from 'astro:content';
import MainLayout from '../layouts/MainLayout.astro';
import PromptCard from '../components/PromptCard.astro';

// 1. Fetch all prompts, sorted by optional date or title
const allPrompts = await getCollection('prompts', ({ data }) => {
  return !data.draft; // Filter out drafts if you add that field later
});
// Sort prompts, newest first if date exists, otherwise by title
allPrompts.sort((a, b) => {
    if (a.data.pubDate && b.data.pubDate) {
        return b.data.pubDate.valueOf() - a.data.pubDate.valueOf();
    }
    return a.data.title.localeCompare(b.data.title);
});

// Extract all unique tags for filtering
const allTags = [...new Set(allPrompts.flatMap(prompt => prompt.data.tags || []))].sort();

const pageTitle: string = "Prompt Library";
const pageDescription: string = "A collection of useful prompts for ChatGPT, Claude, and other AI assistants.";
---

<MainLayout title={pageTitle} description={pageDescription}>
  <section class="py-8 md:py-12">
    <div class="container mx-auto px-4">
      <div class="max-w-3xl mx-auto text-center mb-12">
        <h1 class="text-3xl md:text-5xl font-bold mb-4 text-slate-900 dark:text-slate-100 tracking-tight">{pageTitle}</h1>
        <p class="text-lg md:text-xl text-slate-600 dark:text-slate-400 max-w-2xl mx-auto">{pageDescription}</p>
      </div>
      
      {/* Filter Section - Uncomment and implement when you have more prompts */}
      {allTags.length > 0 && (
        <div class="mb-10 max-w-3xl mx-auto">
          <div class="bg-slate-50 dark:bg-slate-800/50 rounded-lg p-4 border border-slate-200 dark:border-slate-700">
            <h2 class="text-lg font-semibold mb-3 text-slate-800 dark:text-slate-200">Filter by tag</h2>
            <div class="flex flex-wrap gap-2">
              {allTags.map(tag => (
                <button class="filter-tag text-sm bg-white hover:bg-indigo-50 dark:bg-slate-700 dark:hover:bg-slate-600 text-slate-700 dark:text-slate-300 border border-slate-200 dark:border-slate-600 px-3 py-1 rounded-full transition-colors">
                  #{tag}
                </button>
              ))}
            </div>
          </div>
        </div>
      )}

      {allPrompts.length === 0 ? (
        <div class="text-center py-12 bg-slate-50 dark:bg-slate-800/50 rounded-lg border border-slate-200 dark:border-slate-700">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-12 w-12 mx-auto text-slate-400 dark:text-slate-500 mb-4">
            <rect width="18" height="18" x="3" y="3" rx="2" ry="2"></rect>
            <line x1="9" x2="15" y1="9" y2="9"></line>
            <line x1="9" x2="15" y1="15" y2="15"></line>
            <line x1="9" x2="15" y1="12" y2="12"></line>
          </svg>
          <p class="text-slate-500 dark:text-slate-400 mb-4">No prompts found yet.</p>
          <p class="text-sm text-slate-500 dark:text-slate-400">Add some in <code class="bg-slate-100 dark:bg-slate-700 px-1.5 py-0.5 rounded">src/content/prompts/</code></p>
        </div>
      ) : (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8">
          {allPrompts.map(prompt => (
            <PromptCard prompt={prompt} />
          ))}
        </div>
      )}
    </div>
  </section>
</MainLayout>

<script>
  // Filter functionality can be implemented here when you have more prompts
  document.addEventListener('DOMContentLoaded', () => {
    const filterTags = document.querySelectorAll('.filter-tag');
    
    filterTags.forEach(tag => {
      tag.addEventListener('click', () => {
        // Toggle active state visually
        tag.classList.toggle('bg-indigo-100');
        tag.classList.toggle('dark:bg-indigo-900/40');
        tag.classList.toggle('text-indigo-700');
        tag.classList.toggle('dark:text-indigo-300');
        tag.classList.toggle('border-indigo-200');
        tag.classList.toggle('dark:border-indigo-800');
        
        // TODO: Implement actual filtering when you have more prompts
        // This would filter the cards based on selected tags
      });
    });
  });
</script>
